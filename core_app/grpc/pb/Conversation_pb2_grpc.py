# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Conversation_pb2 as Conversation__pb2


class ConversationControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateConversation = channel.unary_unary(
                '/pb.ConversationController/CreateConversation',
                request_serializer=Conversation__pb2.CreateConversationRequest.SerializeToString,
                response_deserializer=Conversation__pb2.CreateConversationResponse.FromString,
                )
        self.GetConversation = channel.unary_unary(
                '/pb.ConversationController/GetConversation',
                request_serializer=Conversation__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=Conversation__pb2.GetConversationResponse.FromString,
                )
        self.ListConversations = channel.unary_unary(
                '/pb.ConversationController/ListConversations',
                request_serializer=Conversation__pb2.ListConversationsRequest.SerializeToString,
                response_deserializer=Conversation__pb2.ListConversationsResponse.FromString,
                )
        self.UpdateConversation = channel.unary_unary(
                '/pb.ConversationController/UpdateConversation',
                request_serializer=Conversation__pb2.UpdateConversationRequest.SerializeToString,
                response_deserializer=Conversation__pb2.UpdateConverastionResponse.FromString,
                )
        self.DeleteConversation = channel.unary_unary(
                '/pb.ConversationController/DeleteConversation',
                request_serializer=Conversation__pb2.DeleteConversationRequest.SerializeToString,
                response_deserializer=Conversation__pb2.DeleteConversationResponse.FromString,
                )


class ConversationControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConversation,
                    request_deserializer=Conversation__pb2.CreateConversationRequest.FromString,
                    response_serializer=Conversation__pb2.CreateConversationResponse.SerializeToString,
            ),
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=Conversation__pb2.GetConversationRequest.FromString,
                    response_serializer=Conversation__pb2.GetConversationResponse.SerializeToString,
            ),
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=Conversation__pb2.ListConversationsRequest.FromString,
                    response_serializer=Conversation__pb2.ListConversationsResponse.SerializeToString,
            ),
            'UpdateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversation,
                    request_deserializer=Conversation__pb2.UpdateConversationRequest.FromString,
                    response_serializer=Conversation__pb2.UpdateConverastionResponse.SerializeToString,
            ),
            'DeleteConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversation,
                    request_deserializer=Conversation__pb2.DeleteConversationRequest.FromString,
                    response_serializer=Conversation__pb2.DeleteConversationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pb.ConversationController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConversationController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pb.ConversationController/CreateConversation',
            Conversation__pb2.CreateConversationRequest.SerializeToString,
            Conversation__pb2.CreateConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pb.ConversationController/GetConversation',
            Conversation__pb2.GetConversationRequest.SerializeToString,
            Conversation__pb2.GetConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pb.ConversationController/ListConversations',
            Conversation__pb2.ListConversationsRequest.SerializeToString,
            Conversation__pb2.ListConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pb.ConversationController/UpdateConversation',
            Conversation__pb2.UpdateConversationRequest.SerializeToString,
            Conversation__pb2.UpdateConverastionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pb.ConversationController/DeleteConversation',
            Conversation__pb2.DeleteConversationRequest.SerializeToString,
            Conversation__pb2.DeleteConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
